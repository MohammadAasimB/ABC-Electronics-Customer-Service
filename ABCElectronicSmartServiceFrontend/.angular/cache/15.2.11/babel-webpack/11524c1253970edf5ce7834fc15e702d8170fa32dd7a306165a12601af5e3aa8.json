{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/Api.service\";\nexport class LoginComponent {\n  constructor(fb, apiService) {\n    this.fb = fb;\n    this.apiService = apiService;\n    this.submitted = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    const loginData = this.loginForm.value;\n    this.apiService.login(loginData).subscribe({\n      next: response => {\n        localStorage.setItem('jwtToken', response.token);\n        this.successMessage = 'Login successful!';\n        this.errorMessage = '';\n        this.loginForm.reset();\n        this.submitted = false;\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password.';\n        this.successMessage = '';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 2,\n      vars: 0,\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"login works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,EAAe,EAAUC,UAAsB;IAA/C,OAAE,GAAFD,EAAE;IAAuB,eAAU,GAAVC,UAAU;IAJvD,cAAS,GAAG,KAAK;IACjB,iBAAY,GAAG,EAAE;IACjB,mBAAc,GAAG,EAAE;EAEmD;EAEtEC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACN,SAAS,CAACO,OAAO,EAAE;MAC1B;;IAGF,MAAMC,SAAS,GAAG,IAAI,CAACR,SAAS,CAACS,KAAK;IAEtC,IAAI,CAACX,UAAU,CAACY,KAAK,CAACF,SAAS,CAAC,CAACG,SAAS,CAAC;MACzCC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC;QAChD,IAAI,CAACC,cAAc,GAAG,mBAAmB;QACzC,IAAI,CAACC,YAAY,GAAG,EAAE;QACtB,IAAI,CAAClB,SAAS,CAACmB,KAAK,EAAE;QACtB,IAAI,CAACb,SAAS,GAAG,KAAK;MACxB,CAAC;MACDc,KAAK,EAAE,MAAK;QACV,IAAI,CAACF,YAAY,GAAG,+BAA+B;QACnD,IAAI,CAACD,cAAc,GAAG,EAAE;MAC1B;KACD,CAAC;EACJ;;;uBArCWtB,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAA0B;MAAAC;MAAAC;MAAAC;QAAA;UCT3BC,yBAAG;UAAAA,4BAAY;UAAAA,iBAAI","names":["Validators","LoginComponent","constructor","fb","apiService","ngOnInit","loginForm","group","username","required","password","onSubmit","submitted","invalid","loginData","value","login","subscribe","next","response","localStorage","setItem","token","successMessage","errorMessage","reset","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder (4)\\ABC-Electronics-Customer-Service\\ABCElectronicSmartServiceFrontend\\src\\app\\login-sign-up\\login\\login.component.ts","C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder (4)\\ABC-Electronics-Customer-Service\\ABCElectronicSmartServiceFrontend\\src\\app\\login-sign-up\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/service/Api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  loginForm!: FormGroup;\n  submitted = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(private fb: FormBuilder, private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const loginData = this.loginForm.value;\n\n    this.apiService.login(loginData).subscribe({\n      next: (response) => {\n        localStorage.setItem('jwtToken', response.token);\n        this.successMessage = 'Login successful!';\n        this.errorMessage = '';\n        this.loginForm.reset();\n        this.submitted = false;\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password.';\n        this.successMessage = '';\n      },\n    });\n  }\n}\n","<p>login works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}