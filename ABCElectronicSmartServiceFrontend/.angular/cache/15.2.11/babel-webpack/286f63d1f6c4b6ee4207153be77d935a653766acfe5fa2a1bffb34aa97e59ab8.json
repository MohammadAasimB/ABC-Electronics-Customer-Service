{"ast":null,"code":"\"use strict\";\n\n// import { Component } from '@angular/core';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { Router } from '@angular/router';\n// import { ApiService } from 'src/app/service/Api.service';\n// import { LoginService } from 'src/app/service/login.service';\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css'],\n// })\n// export class LoginComponent {\n//   myForm: FormGroup;\n//   submittedData: any;\n//   data: any;\n//   // ApiService: any;\n//   constructor(\n//     private formBuilder: FormBuilder,\n//     private loginService: LoginService,\n//     private api: ApiService,\n//     private router: Router,\n//     private apiService: ApiService\n//   ) {\n//     this.myForm = this.formBuilder.group({\n//       name: [\n//         '',\n//         [\n//           Validators.required,\n//           Validators.minLength(3),\n//           Validators.maxLength(50),\n//         ],\n//       ],\n//       password: ['', [Validators.required]],\n//       role: ['', [Validators.required]],\n//     });\n//   }\n//   onSubmit() {\n//     this.apiService\n//       .logIn(\n//         this.myForm.value.name,\n//         this.myForm.value.password,\n//         this.myForm.value.role\n//       )\n//       .subscribe((data: any) => {\n//         if (!data) {\n//           alert('❌ Password is incorrect please try again');\n//           console.log('login not complete');\n//           return;\n//         } else {\n//           alert('Login successful, Welcome ' + this.myForm.value.name);\n//           this.router.navigate(['/']);\n//         }\n//       });\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder (4)\\ABC-Electronics-Customer-Service\\ABCElectronicSmartServiceFrontend\\src\\app\\lonin-signup\\login\\login.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\r\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { Router } from '@angular/router';\r\n// import { ApiService } from 'src/app/service/Api.service';\r\n// import { LoginService } from 'src/app/service/login.service';\r\n\r\n// @Component({\r\n//   selector: 'app-login',\r\n//   templateUrl: './login.component.html',\r\n//   styleUrls: ['./login.component.css'],\r\n// })\r\n// export class LoginComponent {\r\n//   myForm: FormGroup;\r\n//   submittedData: any;\r\n//   data: any;\r\n//   // ApiService: any;\r\n//   constructor(\r\n//     private formBuilder: FormBuilder,\r\n//     private loginService: LoginService,\r\n//     private api: ApiService,\r\n//     private router: Router,\r\n//     private apiService: ApiService\r\n//   ) {\r\n//     this.myForm = this.formBuilder.group({\r\n//       name: [\r\n//         '',\r\n//         [\r\n//           Validators.required,\r\n//           Validators.minLength(3),\r\n//           Validators.maxLength(50),\r\n//         ],\r\n//       ],\r\n//       password: ['', [Validators.required]],\r\n//       role: ['', [Validators.required]],\r\n//     });\r\n//   }\r\n\r\n//   onSubmit() {\r\n//     this.apiService\r\n//       .logIn(\r\n//         this.myForm.value.name,\r\n//         this.myForm.value.password,\r\n//         this.myForm.value.role\r\n//       )\r\n//       .subscribe((data: any) => {\r\n//         if (!data) {\r\n//           alert('❌ Password is incorrect please try again');\r\n//           console.log('login not complete');\r\n//           return;\r\n//         } else {\r\n//           alert('Login successful, Welcome ' + this.myForm.value.name);\r\n//           this.router.navigate(['/']);\r\n//         }\r\n//       });\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}