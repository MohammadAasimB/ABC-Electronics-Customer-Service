{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login.service\";\nexport class ApiService {\n  // loginService: any;\n  constructor(http, loginService) {\n    this.http = http;\n    this.loginService = loginService;\n    this.baseUrl = 'http://localhost:8080/logIn';\n  }\n  // logIn(name: string, password: string, role: string): Observable<string> {\n  //   const url = `${this.baseUrl}/${name}/${password}/${role}`;\n  //   return this.http.get<string>(url);\n  // }\n  logIn(name, password, role) {\n    const url = `${this.baseUrl}/${name}/${password}/${role}`;\n    return this.http.get(url, {\n      responseType: 'text'\n    }).pipe(tap(response => {\n      this.loginService.setSignin(true);\n      this.loginService.setUserId(response); // Assuming response is \"client002\"\n    }));\n  }\n\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;;AAMtC,OAAM,MAAOC,UAAU;EAErB;EAEAC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAHlD,YAAO,GAAG,6BAA6B;EAG4B;EAE3E;EACA;EACA;EACA;EAEAC,KAAK,CAACC,IAAY,EAAEC,QAAgB,EAAEC,IAAY;IAChD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,IAAIJ,IAAI,IAAIC,QAAQ,IAAIC,IAAI,EAAE;IACzD,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAACF,GAAG,EAAE;MAAEG,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,IAAI,CACtDb,GAAG,CAAEc,QAAQ,IAAI;MACf,IAAI,CAACV,YAAY,CAACW,SAAS,CAAC,IAAI,CAAC;MACjC,IAAI,CAACX,YAAY,CAACY,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CACH;EACH;;;;uBAnBWb,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAAgB,SAAVhB,UAAU;MAAAiB,YAFT;IAAM;EAAA","names":["tap","ApiService","constructor","http","loginService","logIn","name","password","role","url","baseUrl","get","responseType","pipe","response","setSignin","setUserId","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder\\ABCElectronicSmartServiceFrontend\\src\\app\\service\\Api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private baseUrl = 'http://localhost:8080/logIn';\n  // loginService: any;\n\n  constructor(private http: HttpClient, private loginService: LoginService) {}\n\n  // logIn(name: string, password: string, role: string): Observable<string> {\n  //   const url = `${this.baseUrl}/${name}/${password}/${role}`;\n  //   return this.http.get<string>(url);\n  // }\n\n  logIn(name: string, password: string, role: string): Observable<string> {\n    const url = `${this.baseUrl}/${name}/${password}/${role}`;\n    return this.http.get(url, { responseType: 'text' }).pipe(\n      tap((response) => {\n        this.loginService.setSignin(true);\n        this.loginService.setUserId(response); // Assuming response is \"client002\"\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}