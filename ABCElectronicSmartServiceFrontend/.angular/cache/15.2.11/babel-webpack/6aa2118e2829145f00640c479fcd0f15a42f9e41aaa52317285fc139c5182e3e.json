{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction NavbarComponent_nav_0_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_nav_0_li_10_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.logout());\n    });\n    i0.ɵɵtext(2, \"Logout\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NavbarComponent_nav_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nav\", 1)(1, \"h3\", 2);\n    i0.ɵɵtext(2, \"Client\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 3)(4, \"li\")(5, \"a\", 4);\n    i0.ɵɵtext(6, \"Home\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"li\")(8, \"a\", 5);\n    i0.ɵɵtext(9, \"View My Complaints\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, NavbarComponent_nav_0_li_10_Template, 3, 0, \"li\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoggedIn());\n  }\n}\nfunction NavbarComponent_nav_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nav\", 1)(1, \"h3\", 2);\n    i0.ɵɵtext(2, \"Engineer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 3)(4, \"li\")(5, \"a\", 4);\n    i0.ɵɵtext(6, \"Home\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"li\")(8, \"a\", 8);\n    i0.ɵɵtext(9, \"Complaints\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction NavbarComponent_nav_2_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_nav_2_li_10_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.logout());\n    });\n    i0.ɵɵtext(2, \"Logout\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NavbarComponent_nav_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nav\", 1)(1, \"h3\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 3)(4, \"li\")(5, \"a\", 9);\n    i0.ɵɵtext(6, \"Register\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"li\")(8, \"a\", 10);\n    i0.ɵɵtext(9, \"LogIn\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, NavbarComponent_nav_2_li_10_Template, 3, 0, \"li\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.isLoggedIn());\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isLoggedIn());\n  }\n}\nexport class NavbarComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.roles = [];\n    this.loggedIn = false;\n  }\n  ngOnInit() {\n    // Subscribe to login status\n    this.authService.isLoggedIn$.subscribe(status => {\n      this.loggedIn = status;\n    });\n    // Subscribe to role changes\n    this.authService.roles$.subscribe(roles => {\n      this.roles = roles;\n      // console.log('roles-->' + this.roles);\n      // console.log('roles-->' + this.authService.getUserRoles());\n    });\n  }\n\n  hasRole(roles) {\n    // console.log('-->' + this.roles.includes(role));\n    return this.roles.includes(roles);\n    // console.log('---');\n    // console.log('--->' + role == 'Client');\n    // return role == 'Client';\n  }\n\n  isLoggedIn() {\n    return this.loggedIn;\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/logIn']);\n  }\n  static {\n    this.ɵfac = function NavbarComponent_Factory(t) {\n      return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavbarComponent,\n      selectors: [[\"app-navbar\"]],\n      decls: 3,\n      vars: 3,\n      consts: [[\"class\", \"navbar\", 4, \"ngIf\"], [1, \"navbar\"], [1, \"banner\", \"logo\"], [1, \"nav-links\"], [\"routerLink\", \"\", 1, \"navlink\"], [\"routerLink\", \"/getComplaintByClient\", 1, \"navlink\"], [4, \"ngIf\"], [1, \"navlink\", 3, \"click\"], [\"routerLink\", \"/getComplaintByEngineer\", 1, \"navlink\"], [\"routerLink\", \"/signUp\", 1, \"navlink\"], [\"routerLink\", \"/logIn\", 1, \"navlink\"]],\n      template: function NavbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NavbarComponent_nav_0_Template, 11, 1, \"nav\", 0);\n          i0.ɵɵtemplate(1, NavbarComponent_nav_1_Template, 10, 0, \"nav\", 0);\n          i0.ɵɵtemplate(2, NavbarComponent_nav_2_Template, 11, 2, \"nav\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.hasRole(\"CLIENT\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.hasRole(\"ENGINEER\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink],\n      styles: [\"a[_ngcontent-%COMP%]:hover {\\r\\n  background-color: rgb(204, 211, 217);\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.banner[_ngcontent-%COMP%] {\\r\\n  flex: 0 0 auto;\\r\\n  padding-left: 0px;\\r\\n  font-size: 50px;\\r\\n  font-family: \\\"Bebas Neue\\\", sans-serif;\\r\\n}\\r\\n.logo[_ngcontent-%COMP%] {\\r\\n  font-family: \\\"Pacifico\\\", cursive;\\r\\n  font-size: 32px;\\r\\n  font-weight: normal;\\r\\n  color: #4e54c8;\\r\\n  letter-spacing: 2px;\\r\\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\\r\\n  margin: 0;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.navbar[_ngcontent-%COMP%] {\\r\\n  \\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 95%;\\r\\n  \\r\\n  background-color: rgb(51, 135, 210);\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  padding: 15px 30px;\\r\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\r\\n  z-index: 1000;\\r\\n}\\r\\n\\r\\n.nav-links[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex: 1;\\r\\n  \\r\\n  gap: 50px;\\r\\n  align-items: center;\\r\\n  justify-content: flex-end;\\r\\n  list-style-type: none;\\r\\n  margin-left: 0;\\r\\n  margin-right: 10%;\\r\\n  margin-top: 10px;\\r\\n  padding-bottom: 5px;\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.navlink[_ngcontent-%COMP%] {\\r\\n  text-decoration: none;\\r\\n  color: rgb(56, 41, 41);\\r\\n  font-weight: bold;\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.logOut[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover {\\r\\n  color: rgb(235, 69, 69);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0NBQW9DO0VBQ3BDLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLHFDQUFxQztBQUN2QztBQUNBO0VBQ0UsZ0NBQWdDO0VBQ2hDLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsY0FBYztFQUNkLG1CQUFtQjtFQUNuQiwyQ0FBMkM7RUFDM0MsU0FBUztFQUNULGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixNQUFNO0VBQ04sT0FBTztFQUNQLFVBQVU7RUFDVixpQ0FBaUM7RUFDakMsbUNBQW1DO0VBQ25DLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsa0JBQWtCO0VBQ2xCLHlDQUF5QztFQUN6QyxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsT0FBTztFQUNQLHdCQUF3QjtFQUN4QixTQUFTO0VBQ1QsbUJBQW1CO0VBQ25CLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixZQUFZO0FBQ2Q7O0FBRUE7Ozs7O0dBS0c7O0FBRUg7RUFDRSx1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyJhOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA0LCAyMTEsIDIxNyk7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4uYmFubmVyIHtcclxuICBmbGV4OiAwIDAgYXV0bztcclxuICBwYWRkaW5nLWxlZnQ6IDBweDtcclxuICBmb250LXNpemU6IDUwcHg7XHJcbiAgZm9udC1mYW1pbHk6IFwiQmViYXMgTmV1ZVwiLCBzYW5zLXNlcmlmO1xyXG59XHJcbi5sb2dvIHtcclxuICBmb250LWZhbWlseTogXCJQYWNpZmljb1wiLCBjdXJzaXZlO1xyXG4gIGZvbnQtc2l6ZTogMzJweDtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIGNvbG9yOiAjNGU1NGM4O1xyXG4gIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG59XHJcblxyXG4ubmF2YmFyIHtcclxuICAvKiBwb3NpdGlvbjogZml4ZWQ7ICovXHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDk1JTtcclxuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7ICovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUxLCAxMzUsIDIxMCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgcGFkZGluZzogMTVweCAzMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIHotaW5kZXg6IDEwMDA7XHJcbn1cclxuXHJcbi5uYXYtbGlua3Mge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleDogMTtcclxuICAvKiBmbGV4LWJhc2lzOiAxMTAwcHg7ICovXHJcbiAgZ2FwOiA1MHB4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMCU7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLm5hdmxpbmsge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBjb2xvcjogcmdiKDU2LCA0MSwgNDEpO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHBhZGRpbmc6IDVweDtcclxufVxyXG5cclxuLyogLm5hdmJhciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJvdHRvbTogMDtcclxuICBsZWZ0OiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XHJcbn0gKi9cclxuXHJcbi5sb2dPdXQgOmhvdmVyIHtcclxuICBjb2xvcjogcmdiKDIzNSwgNjksIDY5KTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;IAWIA,0BAAyB;IACJA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAI;;;;;IAXtDA,8BAA8C;IAEpBA,sBAAM;IAAAA,iBAAK;IACnCA,6BAAsB;IACiBA,oBAAI;IAAAA,iBAAI;IAC7CA,0BAAI;IAECA,kCAAkB;IAAAA,iBACpB;IAEHA,sEAEK;IACPA,iBAAK;;;;IAHEA,gBAAkB;IAAlBA,0CAAkB;;;;;IAO3BA,8BAAgD;IACtBA,wBAAQ;IAAAA,iBAAK;IACrCA,6BAAsB;IACiBA,oBAAI;IAAAA,iBAAI;IAC7CA,0BAAI;IACsDA,0BAAU;IAAAA,iBAAI;;;;;;IAWxEA,0BAAyB;IACJA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAI;;;;;IANtDA,8BAA0C;IAChBA,YAAkB;IAAAA,iBAAK;IAC/CA,6BAAsB;IACwBA,wBAAQ;IAAAA,iBAAI;IACxDA,0BAAI;IAAuCA,qBAAK;IAAAA,iBAAI;IACpDA,sEAEK;IACPA,iBAAK;;;;IAPmBA,eAAkB;IAAlBA,yCAAkB;IAInCA,eAAkB;IAAlBA,0CAAkB;;;ACxB3B,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAH5D,UAAK,GAAa,EAAE;IACpB,aAAQ,GAAG,KAAK;EAEuD;EAEvEC,QAAQ;IACN;IACA,IAAI,CAACF,WAAW,CAACG,WAAW,CAACC,SAAS,CAAEC,MAAM,IAAI;MAChD,IAAI,CAACC,QAAQ,GAAGD,MAAM;IACxB,CAAC,CAAC;IAEF;IACA,IAAI,CAACL,WAAW,CAACO,MAAM,CAACH,SAAS,CAAEI,KAAK,IAAI;MAC1C,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB;MACA;IACF,CAAC,CAAC;EACJ;;EAEAC,OAAO,CAACD,KAAa;IACnB;IACA,OAAO,IAAI,CAACA,KAAK,CAACE,QAAQ,CAACF,KAAK,CAAC;IACjC;IACA;IACA;EACF;;EAEAG,UAAU;IACR,OAAO,IAAI,CAACL,QAAQ;EACtB;EAEAM,MAAM;IACJ,IAAI,CAACZ,WAAW,CAACY,MAAM,EAAE;IACzB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;;uBAnCWf,eAAe;IAAA;EAAA;;;YAAfA,eAAe;MAAAgB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDT5BrB,iEAcM;UAGNA,iEAQM;UAGNA,iEASM;;;UArCeA,4CAAuB;UAiBvBA,eAAyB;UAAzBA,8CAAyB;UAWzBA,eAAmB;UAAnBA,wCAAmB","names":["i0","NavbarComponent","constructor","authService","router","ngOnInit","isLoggedIn$","subscribe","status","loggedIn","roles$","roles","hasRole","includes","isLoggedIn","logout","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder (4)\\ABC-Electronics-Customer-Service\\ABCElectronicSmartServiceFrontend\\src\\app\\navbar\\navbar.component.html","C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder (4)\\ABC-Electronics-Customer-Service\\ABCElectronicSmartServiceFrontend\\src\\app\\navbar\\navbar.component.ts"],"sourcesContent":["<!-- CLIENT NAVBAR -->\r\n<nav class=\"navbar\" *ngIf=\"hasRole('CLIENT')\">\r\n  <!-- <nav class=\"navbar\" *ngIf=\"true\"> -->\r\n  <h3 class=\"banner logo\">Client</h3>\r\n  <ul class=\"nav-links\">\r\n    <li><a class=\"navlink\" routerLink=\"\">Home</a></li>\r\n    <li>\r\n      <a class=\"navlink\" routerLink=\"/getComplaintByClient\"\r\n        >View My Complaints</a\r\n      >\r\n    </li>\r\n    <li *ngIf=\"isLoggedIn()\">\r\n      <a class=\"navlink\" (click)=\"logout()\">Logout</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<!-- ENGINEER NAVBAR -->\r\n<nav class=\"navbar\" *ngIf=\"hasRole('ENGINEER')\">\r\n  <h3 class=\"banner logo\">Engineer</h3>\r\n  <ul class=\"nav-links\">\r\n    <li><a class=\"navlink\" routerLink=\"\">Home</a></li>\r\n    <li>\r\n      <a class=\"navlink\" routerLink=\"/getComplaintByEngineer\">Complaints</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<!-- before login -->\r\n<nav class=\"navbar\" *ngIf=\"!isLoggedIn()\">\r\n  <h3 class=\"banner logo\">{{ isLoggedIn() }}</h3>\r\n  <ul class=\"nav-links\">\r\n    <li><a class=\"navlink\" routerLink=\"/signUp\">Register</a></li>\r\n    <li><a class=\"navlink\" routerLink=\"/logIn\">LogIn</a></li>\r\n    <li *ngIf=\"isLoggedIn()\">\r\n      <a class=\"navlink\" (click)=\"logout()\">Logout</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<!-- <nav class=\"navbar\">\r\n  <h3 class=\"banner logo\">{{ isLoggedIn() }}</h3>\r\n  <ul class=\"nav-links\">\r\n    <li *ngIf=\"isLoggedIn()\">\r\n      <a class=\"navlink\" (click)=\"logout()\">Logout</a>\r\n    </li>\r\n  </ul>\r\n</nav> -->\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Client } from '../model/client';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent {\r\n  roles: string[] = [];\r\n  loggedIn = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to login status\r\n    this.authService.isLoggedIn$.subscribe((status) => {\r\n      this.loggedIn = status;\r\n    });\r\n\r\n    // Subscribe to role changes\r\n    this.authService.roles$.subscribe((roles) => {\r\n      this.roles = roles;\r\n      // console.log('roles-->' + this.roles);\r\n      // console.log('roles-->' + this.authService.getUserRoles());\r\n    });\r\n  }\r\n\r\n  hasRole(roles: string): boolean {\r\n    // console.log('-->' + this.roles.includes(role));\r\n    return this.roles.includes(roles);\r\n    // console.log('---');\r\n    // console.log('--->' + role == 'Client');\r\n    // return role == 'Client';\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.loggedIn;\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/logIn']);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}