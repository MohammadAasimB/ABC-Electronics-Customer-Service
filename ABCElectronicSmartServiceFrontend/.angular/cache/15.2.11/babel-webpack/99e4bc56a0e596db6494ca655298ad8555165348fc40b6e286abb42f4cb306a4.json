{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/Api.service\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"small\");\n    i0.ɵɵtext(2, \"Username is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"small\");\n    i0.ɵɵtext(2, \"Password is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.successMessage);\n  }\n}\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, apiService) {\n    this.fb = fb;\n    this.apiService = apiService;\n    this.submitted = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    const loginData = this.loginForm.value;\n    this.apiService.login(loginData).subscribe({\n      next: response => {\n        localStorage.setItem('jwtToken', response.token);\n        this.successMessage = 'Login successful!';\n        this.errorMessage = '';\n        this.loginForm.reset();\n        this.submitted = false;\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password.';\n        this.successMessage = '';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 24,\n      vars: 6,\n      consts: [[1, \"container\"], [1, \"left-banner\"], [1, \"right-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"success\", 4, \"ngIf\"], [1, \"error\"], [1, \"success\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"Welcome Back!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\");\n          i0.ɵɵtext(5, \"Log in to access your dashboard and manage your data efficiently.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"h2\");\n          i0.ɵɵtext(9, \"Client Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n          i0.ɵɵtext(12, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 6);\n          i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 3, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 8);\n          i0.ɵɵtext(17, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 9);\n          i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 3, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 10);\n          i0.ɵɵtext(21, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, LoginComponent_div_22_Template, 2, 1, \"div\", 11);\n          i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.invalid));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICY3DC,+BAGC;IACQA,qCAAqB;IAAAA,iBAAQ;;;;;IAOtCA,+BAGC;IACQA,qCAAqB;IAAAA,iBAAQ;;;;;IAMxCA,+BAA4C;IAAAA,YAAoB;IAAAA,iBAAM;;;;IAA1BA,eAAoB;IAApBA,2CAAoB;;;;;IAChEA,+BAAwC;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;AD1BhE,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,EAAe,EAAUC,UAAsB;IAA/C,OAAE,GAAFD,EAAE;IAAuB,eAAU,GAAVC,UAAU;IAJvD,cAAS,GAAG,KAAK;IACjB,iBAAY,GAAG,EAAE;IACjB,mBAAc,GAAG,EAAE;EAEmD;EAEtEC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACN,SAAS,CAACO,OAAO,EAAE;MAC1B;;IAGF,MAAMC,SAAS,GAAG,IAAI,CAACR,SAAS,CAACS,KAAK;IAEtC,IAAI,CAACX,UAAU,CAACY,KAAK,CAACF,SAAS,CAAC,CAACG,SAAS,CAAC;MACzCC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC;QAChD,IAAI,CAACC,cAAc,GAAG,mBAAmB;QACzC,IAAI,CAACC,YAAY,GAAG,EAAE;QACtB,IAAI,CAAClB,SAAS,CAACmB,KAAK,EAAE;QACtB,IAAI,CAACb,SAAS,GAAG,KAAK;MACxB,CAAC;MACDc,KAAK,EAAE,MAAK;QACV,IAAI,CAACF,YAAY,GAAG,+BAA+B;QACnD,IAAI,CAACD,cAAc,GAAG,EAAE;MAC1B;KACD,CAAC;EACJ;;;uBArCWtB,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAA0B;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCT3B/B,8BAAuB;UAEfA,6BAAa;UAAAA,iBAAK;UACtBA,yBAAG;UAAAA,iFAAiE;UAAAA,iBAAI;UAG1EA,8BAAwB;UACQA;YAAA,OAAYgC,cAAU;UAAA,EAAC;UACnDhC,0BAAI;UAAAA,4BAAY;UAAAA,iBAAK;UAErBA,+BAAwB;UACAA,yBAAQ;UAAAA,iBAAQ;UACtCA,4BAAgD;UAChDA,iEAKM;UACRA,iBAAM;UAENA,+BAAwB;UACAA,yBAAQ;UAAAA,iBAAQ;UACtCA,4BAAoD;UACpDA,iEAKM;UACRA,iBAAM;UAENA,mCAAqD;UAAAA,sBAAK;UAAAA,iBAAS;UAEnEA,kEAAsE;UACtEA,iEAAgE;UAClEA,iBAAO;;;;;UA7BDA,eAAuB;UAAvBA,yCAAuB;UAQtBA,eAAqD;UAArDA,oHAAqD;UAWrDA,eAAqD;UAArDA,oHAAqD;UAMpCA,eAA8B;UAA9BA,gDAA8B;UAE9BA,eAAoB;UAApBA,yCAAoB;UACtBA,eAAkB;UAAlBA,uCAAkB","names":["Validators","i0","LoginComponent","constructor","fb","apiService","ngOnInit","loginForm","group","username","required","password","onSubmit","submitted","invalid","loginData","value","login","subscribe","next","response","localStorage","setItem","token","successMessage","errorMessage","reset","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder (4)\\ABC-Electronics-Customer-Service\\ABCElectronicSmartServiceFrontend\\src\\app\\login-sign-up\\login\\login.component.ts","C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder (4)\\ABC-Electronics-Customer-Service\\ABCElectronicSmartServiceFrontend\\src\\app\\login-sign-up\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/service/Api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  loginForm!: FormGroup;\n  submitted = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(private fb: FormBuilder, private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const loginData = this.loginForm.value;\n\n    this.apiService.login(loginData).subscribe({\n      next: (response) => {\n        localStorage.setItem('jwtToken', response.token);\n        this.successMessage = 'Login successful!';\n        this.errorMessage = '';\n        this.loginForm.reset();\n        this.submitted = false;\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password.';\n        this.successMessage = '';\n      },\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"left-banner\">\n    <h1>Welcome Back!</h1>\n    <p>Log in to access your dashboard and manage your data efficiently.</p>\n  </div>\n\n  <div class=\"right-form\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <h2>Client Login</h2>\n\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" />\n        <div\n          class=\"error\"\n          *ngIf=\"submitted && loginForm.get('username')?.invalid\"\n        >\n          <small>Username is required.</small>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" />\n        <div\n          class=\"error\"\n          *ngIf=\"submitted && loginForm.get('password')?.invalid\"\n        >\n          <small>Password is required.</small>\n        </div>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n\n      <div class=\"success\" *ngIf=\"successMessage\">{{ successMessage }}</div>\n      <div class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}