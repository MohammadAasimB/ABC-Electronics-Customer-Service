{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/login.service\";\nimport * as i3 from \"src/app/service/api.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_11_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, LoginComponent_div_11_small_1_Template, 2, 0, \"small\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.myForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_16_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, LoginComponent_div_16_small_1_Template, 2, 0, \"small\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.myForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_29_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Role is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, LoginComponent_div_29_small_1_Template, 2, 0, \"small\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.myForm.get(\"role\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  // ApiService: any;\n  constructor(formBuilder, loginService, api, router, apiService) {\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n    this.api = api;\n    this.router = router;\n    this.apiService = apiService;\n    this.myForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      password: ['', [Validators.required]],\n      role: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    this.apiService.logIn(this.myForm.value.name, this.myForm.value.password, this.myForm.value.role).subscribe(data => {\n      if (!data) {\n        console.log('❌ User not found');\n        alert('❌ No such User as' + this.myForm.value.name);\n        return;\n      }\n      if (this.myForm.value.password === data.password) {\n        this.loginService.setSignin(true);\n        console.log(this.loginService.getSignin);\n        console.log('login complete');\n        alert('Login successful, Welcome ' + this.myForm.value.name);\n        this.router.navigate(['/']);\n      } else {\n        alert('❌ Password is incorrect please try again');\n        console.log('login not complete');\n      }\n      this.data = data;\n      console.log(this.data);\n      return this.data;\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.ApiService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i3.ApiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 32,\n      vars: 14,\n      consts: [[1, \"main\"], [1, \"left\"], [1, \"banner1\"], [1, \"banner2\"], [\"action\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"name\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form-group\", \"password\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\", \"role\"], [\"for\", \"role\"], [\"formControlName\", \"role\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"admin\"], [\"value\", \"client\"], [\"value\", \"engineer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"disabled\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n          i0.ɵɵtext(3, \"login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"h1\", 3);\n          i0.ɵɵtext(5, \"to add Data\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n          i0.ɵɵtext(14, \"password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 11);\n          i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 12)(18, \"label\", 13);\n          i0.ɵɵtext(19, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"select\", 14)(21, \"option\", 15);\n          i0.ɵɵtext(22, \"Select Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"option\", 16);\n          i0.ɵɵtext(24, \"Admin\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"option\", 17);\n          i0.ɵɵtext(26, \"Client\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"option\", 18);\n          i0.ɵɵtext(28, \"Engineer\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(29, LoginComponent_div_29_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"button\", 19);\n          i0.ɵɵtext(31, \" Log In \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ((tmp_1_0 = ctx.myForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.myForm.get(\"name\")) == null ? null : tmp_1_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.myForm.get(\"name\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.myForm.get(\"name\")) == null ? null : tmp_2_0.invalid));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ((tmp_3_0 = ctx.myForm.get(\"password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.myForm.get(\"password\")) == null ? null : tmp_3_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.myForm.get(\"password\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.myForm.get(\"password\")) == null ? null : tmp_4_0.invalid));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ((tmp_5_0 = ctx.myForm.get(\"role\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.myForm.get(\"role\")) == null ? null : tmp_5_0.touched)));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.myForm.get(\"role\")) == null ? null : tmp_6_0.touched) && ((tmp_6_0 = ctx.myForm.get(\"role\")) == null ? null : tmp_6_0.invalid));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".main[_ngcontent-%COMP%] {\\r\\n  display: grid;\\r\\n  grid-template-columns: 50% 50%;\\r\\n}\\r\\n\\r\\n.left[_ngcontent-%COMP%] {\\r\\n  margin: 10px 10px;\\r\\n  height: 500px;\\r\\n  background-color: aqua;\\r\\n}\\r\\n.banner1[_ngcontent-%COMP%], .banner2[_ngcontent-%COMP%] {\\r\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\r\\n  font-size: 100px;\\r\\n}\\r\\n.banner1[_ngcontent-%COMP%] {\\r\\n  margin-top: 50px;\\r\\n  margin-left: 30px;\\r\\n}\\r\\n.banner2[_ngcontent-%COMP%] {\\r\\n  margin-top: 70px;\\r\\n  margin-left: 80px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9uaW4tc2lnbnVwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7QUFDQTs7RUFFRSx3RUFBd0U7RUFDeEUsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4ge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1MCUgNTAlO1xyXG59XHJcblxyXG4ubGVmdCB7XHJcbiAgbWFyZ2luOiAxMHB4IDEwcHg7XHJcbiAgaGVpZ2h0OiA1MDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhO1xyXG59XHJcbi5iYW5uZXIxLFxyXG4uYmFubmVyMiB7XHJcbiAgZm9udC1mYW1pbHk6IFwiRnJhbmtsaW4gR290aGljIE1lZGl1bVwiLCBcIkFyaWFsIE5hcnJvd1wiLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBmb250LXNpemU6IDEwMHB4O1xyXG59XHJcbi5iYW5uZXIxIHtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG59XHJcbi5iYW5uZXIyIHtcclxuICBtYXJnaW4tdG9wOiA3MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA4MHB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","formBuilder","loginService","api","router","apiService","myForm","group","name","required","minLength","maxLength","password","role","onSubmit","logIn","value","subscribe","data","console","log","alert","setSignin","getSignin","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder\\ABCElectronicSmartServiceFrontend\\src\\app\\lonin-signup\\login\\login.component.ts","C:\\Users\\MB20\\OneDrive - Capgemini\\Desktop\\New folder\\ABCElectronicSmartServiceFrontend\\src\\app\\lonin-signup\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/service/api.service';\nimport { LoginService } from 'src/app/service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  myForm: FormGroup;\n  submittedData: any;\n  data: any;\n  // ApiService: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private api: ApiService,\n    private router: Router,\n    private apiService: ApiService\n  ) {\n    this.myForm = this.formBuilder.group({\n      name: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(50),\n        ],\n      ],\n      password: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    this.apiService\n      .logIn(\n        this.myForm.value.name,\n        this.myForm.value.password,\n        this.myForm.value.role\n      )\n      .subscribe((data: any) => {\n        if (!data) {\n          console.log('❌ User not found');\n          alert('❌ No such User as' + this.myForm.value.name);\n          return;\n        }\n        if (this.myForm.value.password === data.password) {\n          this.loginService.setSignin(true);\n          console.log(this.loginService.getSignin);\n          console.log('login complete');\n          alert('Login successful, Welcome ' + this.myForm.value.name);\n          this.router.navigate(['/']);\n        } else {\n          alert('❌ Password is incorrect please try again');\n          console.log('login not complete');\n        }\n        this.data = data;\n        console.log(this.data);\n        return this.data;\n      });\n  }\n}\n","<div class=\"main\">\n  <div class=\"left\">\n    <h1 class=\"banner1\">login</h1>\n    <h1 class=\"banner2\">to add Data</h1>\n  </div>\n  <form action=\"\" [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group name\">\n      <label for=\"name\">Name</label>\n      <input\n        type=\"text\"\n        formControlName=\"name\"\n        class=\"form-control\"\n        [ngClass]=\"{\n          'is-invalid':\n            myForm.get('name')?.invalid && myForm.get('name')?.touched\n        }\"\n      />\n      <div\n        *ngIf=\"myForm.get('name')?.touched && myForm.get('name')?.invalid\"\n        class=\"text-danger\"\n      >\n        <small *ngIf=\"myForm.get('name')?.errors?.['required']\"\n          >Name is required.</small\n        >\n      </div>\n    </div>\n\n    <div class=\"form-group password\">\n      <label for=\"password\">password</label>\n      <input\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        [ngClass]=\"{\n          'is-invalid':\n            myForm.get('password')?.invalid && myForm.get('password')?.touched\n        }\"\n      />\n      <div\n        *ngIf=\"\n          myForm.get('password')?.touched && myForm.get('password')?.invalid\n        \"\n        class=\"text-danger\"\n      >\n        <small *ngIf=\"myForm.get('password')?.errors?.['required']\"\n          >password is required.</small\n        >\n      </div>\n    </div>\n\n    <div class=\"form-group role\">\n      <label for=\"role\">Role</label>\n      <select\n        formControlName=\"role\"\n        class=\"form-control\"\n        [ngClass]=\"{\n          'is-invalid':\n            myForm.get('role')?.invalid && myForm.get('role')?.touched\n        }\"\n      >\n        <option value=\"\">Select Role</option>\n        <option value=\"admin\">Admin</option>\n        <option value=\"client\">Client</option>\n        <option value=\"engineer\">Engineer</option>\n      </select>\n      <div\n        *ngIf=\"myForm.get('role')?.touched && myForm.get('role')?.invalid\"\n        class=\"text-danger\"\n      >\n        <small *ngIf=\"myForm.get('role')?.errors?.['required']\"\n          >Role is required.</small\n        >\n      </div>\n    </div>\n\n    <button\n      class=\"btn btn-primary mt-3\"\n      type=\"submit\"\n      [disabled]=\"myForm.invalid\"\n    >\n      Log In\n    </button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}